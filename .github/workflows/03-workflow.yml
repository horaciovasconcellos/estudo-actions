name: CI Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
   
jobs:
  build:
    runs-on: [ self-hosted, Linux ]
    steps:

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Configure Git user
        run: |
          git config user.email "horacio.vasconcellos@gmail.com"
          git config user.name "Horacio Vasconcellos"

#      - name: Commit Changelog
#        run: |
#          git add CHANGELOG.md
#          git commit -m "docs: update changelog for version ${{ github.event.inputs.releaseVersion }}"
#          git push origin main
      - name: Setup Maven settings.xml
        uses: s4u/maven-settings-action@v3.0.0
        with:
            servers: |
              [{
                "id": "github",
                "username": "${{ github.actor }}",
                "password": "${{ secrets.RELEASE_TOKEN }}"
              }]
        continue-on-error: true
 
      - name: Prepare Release
        run: |
          set -e
          mvn release:prepare \
          -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
          -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} \
          -DtagNameFormat=v@{project.version}
        if: success()

      - name: Notificar erro no Slack
        run: echo "Erro nos testes!"
        if: failure()      
      
      - name: Perform Release
        run: mvn release:perform
      
      - name: Push changes
        run: |
          set -e
          git push origin main
          git push origin --tags

      # Passo para rodar o Liquibase com o Maven
      - name: Update Database with Liquibase
        run: mvn liquibase:update -Dliquibase.url=jdbc:oracle:thin:@//${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_SERVICE_NAME }} -Dliquibase.username=${{ secrets.DB_USERNAME }} -Dliquibase.password=${{ secrets.DB_PASSWORD }} -Dliquibase.changeLogFile=db/changelog/db.changelog-master.xml
        env:
          DB_URL: ${{ secrets.DB_URL }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

