name: 23-on_repository_watch

on:
  watch:
    types: [started]  # Dispara quando algu√©m come√ßa a observar o reposit√≥rio

jobs:
  thank-watcher:
    runs-on: [ self-hosted, Linux ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get watcher info
        id: watcher-info
        run: |
          echo "Watcher: ${{ github.actor }}"
          echo "Event: ${{ github.event_name }}"
          echo "Repository: ${{ github.repository }}"
          echo "Timestamp: ${{ github.event.repository.updated_at }}"
          
          # Armazenar informa√ß√µes para uso posterior
          echo "WATCHER_LOGIN=${{ github.actor }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.repository }}" >> $GITHUB_ENV

      - name: Send thank you message (simulado)
        run: |
          echo "ü§ñ Obrigado por observar o reposit√≥rio, @${{ env.WATCHER_LOGIN }}!"
          echo "üìå Agora voc√™ receber√° notifica√ß√µes sobre atividades em ${{ env.REPO_NAME }}"
          echo "‚≠ê Se voc√™ gostou do projeto, considere dar uma estrela tamb√©m!"

      - name: Create GitHub Issue (opcional)
        if: github.event.repository.stargazers_count > 100  # S√≥ cria issue para reposit√≥rios populares
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Novo observador: @${{ github.actor }}`,
              body: `O usu√°rio @${{ github.actor }} come√ßou a observar este reposit√≥rio! Total de observadores agora: ${{ github.event.repository.subscribers_count }}`
            })
